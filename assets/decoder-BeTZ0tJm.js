var m=Object.defineProperty;var _=(a,e,t)=>e in a?m(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t;var g=(a,e,t)=>_(a,typeof e!="symbol"?e+"":e,t);import{w as A,r as s,c as u,O as l,a4 as p,a5 as R}from"./index-C7qSfoIW.js";var n=(a=>(a[a.Fetch=0]="Fetch",a[a.Decode=1]="Decode",a[a.Read=2]="Read",a[a.Execute=3]="Execute",a[a.Write=4]="Write",a))(n||{});const h=class h{constructor(e){this.decoderState=e,globalThis.cpu=this,A(()=>this.instructionsOp[this.pc.value],()=>{this.stage===1&&(this.decodedStages=this.decodeStages(this.pc.value))}),this.decodedStages=this.decodeStages(this.pc.value)}_stage=s(0);pc=s(0);address=u(()=>this.instructionsAddr[this.pc.value]);regA=s(0);regB=s(0);flagZ=s(!1);flagO=s(!1);_pcJump=u(()=>{const e=this._jmpNot.value,t=this._jmpOverflow.value,i=this._jmpZero.value;if(!t&&!i)return e;const r=(i?this.flagZ.value:!0)&&(t?this.flagO.value:!0);return e?!r:r});_jmpNot=s(!1);_jmpZero=s(!1);_jmpOverflow=s(!1);_regAWrite=s(!1);_regARead=s(!1);_regBWrite=s(!1);_regBRead=s(!1);_ramWrite=s(!1);_ramRead=s(!1);_aluOp1=s(!1);_aluOp2=s(!1);_aluOp=u(()=>(this._aluOp1.value?1:0)+(this._aluOp2.value?2:0));_aluInA=s(0);_aluInB=s(0);_regAOut=s(0);_regBOut=s(0);_aluOut=s(0);_ramOut=s(0);data=u(()=>(this._regARead.value?this._regAOut.value:0)|(this._regBRead.value?this._regBOut.value:0)|(this._aluOp.value?this._aluOut.value:0)|(this._ramRead.value?this._ramOut.value:0)|this.instructionsData[this.pc.value]);aluInA=u(()=>this._aluOp.value===0?this.regA.value:this._aluInA.value);aluInB=u(()=>this._aluOp.value===0?this.regB.value:this._aluInB.value);get pcJump(){return this._pcJump.value}get stage(){return this._stage.value}set stage(e){if(e!==this._stage.value){switch(e){case 0:{const t=this.pcJump?this.address.value:this.pc.value+1&15;this.pc.value=t;break}case 1:this.decodedStages=this.decodeStages(this.pc.value);break}this._stage.value=e}}get jmpNot(){return this._jmpNot.value}get jmpZero(){return this._jmpZero.value}get jmpOverflow(){return this._jmpOverflow.value}get regAWrite(){return this._regAWrite.value}get regARead(){return this._regARead.value}get regBWrite(){return this._regBWrite.value}get regBRead(){return this._regBRead.value}get ramWrite(){return this._ramWrite.value}get ramRead(){return this._ramRead.value}get aluOp(){return this._aluOp.value}ram=l(Array(16).fill(0));instructionsOp=l(Array(16).fill(0));instructionsAddr=l(Array(16).fill(0));instructionsData=l(Array(16).fill(0));execAluOp(){const e=this.aluOp,t=this.regA.value,i=this.regB.value;switch(e){case 1:return t&i;case 2:return t+i;case 3:return t-i}return 0}nextStage(){const e=this.stage,t=h.NextStage[e],i=this.decodedStages[e],r=this.decodedStages[t];for(const c of Object.keys(this.gateMap)){const v=this.gateMap[c];v.value=r.has(c)}const d=r.difference(i);this.processGateActivations(d),this.stage=t}processGateActivations(e){if(e.has("AR")&&(this._regAOut.value=this.regA.value),e.has("BR")&&(this._regBOut.value=this.regB.value),e.has("RR")&&(this._ramOut.value=this.ram[this.address.value]),e.has("AW")&&(this.regA.value=this.data.value),e.has("BW")&&(this.regB.value=this.data.value),e.has("RW")&&(this.ram[this.address.value]=this.data.value),e.has("ALU1")||e.has("ALU2")){const t=this.execAluOp();this._aluInA.value=this.regA.value,this._aluInB.value=this.regB.value,this._aluOut.value=t&15,this.flagZ.value=this._aluOut.value===0,this.flagO.value=t>15||t<0}}step(){do this.nextStage();while(this.stage!==0)}decodedStages;decodeStage(e,t){const i=this.decoderState.instructions[e].gates,r=this.decoderState.timingMasks[t];return i.intersection(r)}decodeStages(e){const t=this.decoderState.instructions[this.instructionsOp[e]].gates,i=this.decoderState.timingMasks;return{0:t.intersection(i[0]),1:t.intersection(i[1]),2:t.intersection(i[2]),3:t.intersection(i[3]),4:t.intersection(i[4])}}gateMap={JN:this._jmpNot,JZ:this._jmpZero,JO:this._jmpOverflow,RR:this._ramRead,RW:this._ramWrite,AR:this._regARead,AW:this._regAWrite,BR:this._regBRead,BW:this._regBWrite,ALU1:this._aluOp1,ALU2:this._aluOp2}};g(h,"NextStage",{0:1,1:2,2:3,3:4,4:0});let o=h;const f=[{name:"NOP",gates:[]},{name:"LD A",gates:["AW"]},{name:"LR A",gates:["AW","RR"]},{name:"LD B",gates:["BW"]},{name:"LR B",gates:["BW","RR"]},{name:"LD B, A",gates:["AR","BW"]},{name:"LD A, B",gates:["AW","BR"]},{name:"ST A",gates:["AR","RW"]},{name:"ST B",gates:["BR","RW"]},{name:"AND",gates:["AW","ALU1"]},{name:"ADD",gates:["AW","ALU2"]},{name:"SUB",gates:["AW","ALU1","ALU2"]},{name:"JMP",gates:["JN"]},{name:"JMZ",gates:["JZ"]},{name:"JMO",gates:["JO"]},{name:"JNZ",gates:["JN","JZ"]}],O={fetch:["JN","JZ","JO"],decode:[],read:["AR","BR","RR"],exec:["AR","BR","RR","ALU1","ALU2"],write:["AR","BR","RR","ALU1","ALU2","AW","BW","RW"]},B={instructions:f,timingMasks:O};function W(a){return{instructions:a.instructions.map(e=>({name:e.name,gates:new Set(e.gates)})),timingMasks:{[n.Fetch]:new Set(a.timingMasks.fetch),[n.Decode]:new Set(a.timingMasks.decode),[n.Read]:new Set(a.timingMasks.read),[n.Execute]:new Set(a.timingMasks.exec),[n.Write]:new Set(a.timingMasks.write)}}}const S=W(B),L=p("decoder",{state:()=>({state:R(S)})});export{o as C,n as a,L as u};
