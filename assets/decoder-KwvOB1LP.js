import{a5 as D,a6 as O}from"./index-CJ5XVLxV.js";const I=[{name:"NOP",gates:[]},{name:"LD A",gates:["AW"]},{name:"LR A",gates:["AW","RR"]},{name:"LD B",gates:["BW"]},{name:"LR B",gates:["BW","RR"]},{name:"LD B, A",gates:["AR","BW"]},{name:"LD A, B",gates:["AW","BR"]},{name:"ST A",gates:["AR","RW"]},{name:"ST B",gates:["BR","RW"]},{name:"AND",gates:["AW","ALU1"]},{name:"ADD",gates:["AW","ALU2"]},{name:"SUB",gates:["AW","ALU1","ALU2"]},{name:"JMP",gates:["JN"]},{name:"JMZ",gates:["JZ"]},{name:"JMO",gates:["JO"]},{name:"JNZ",gates:["JN","JZ"]}],p={fetch:["JN","JZ","JO"],decode:[],read:["AR","BR","RR"],exec:["AR","BR","RR","ALU1","ALU2"],write:["AR","BR","RR","ALU1","ALU2","AW","BW","RW"]},W={instructions:I,timingMasks:p},a={Fetch:0,Decode:1,Read:2,Execute:3,Write:4},c={JN:1,JZ:2,JO:4,RR:8,RW:16,AR:32,AW:64,BR:128,BW:256,ALU1:512,ALU2:1024},S=Object.fromEntries(Object.entries(c).map(([e,t])=>[t,e])),B={And:1,Add:2,Sub:3},G={[a.Fetch]:a.Decode,[a.Decode]:a.Read,[a.Read]:a.Execute,[a.Execute]:a.Write,[a.Write]:a.Fetch};function J(){return new Uint8Array(84).fill(0)}const n={validateState(e){if(e.length!==84)throw new Error("State must be of length 84")},getRegA(e){return e[0]&15},setRegA(e,t){e[0]=t&15},getRegB(e){return e[1]&15},setRegB(e,t){e[1]=t&15},getPc(e){return e[2]&15},setPc(e,t){e[2]=t&15},getFlagZ(e){return!!(e[3]&8)},setFlagZ(e,t){e[3]=e[3]&7|(t?8:0)},getFlagO(e){return!!(e[3]&4)},setFlagO(e,t){e[3]=e[3]&11|(t?4:0)},getRam(e,t){return e[4+(t&15)]&15},setRam(e,t,s){e[4+(t&15)]=s&15},getInstructionsOp(e,t){return e[20+(t&15)]&15},setInstructionsOp(e,t,s){e[20+(t&15)]=s&15},getInstructionsAddr(e,t){return e[36+(t&15)]&15},setInstructionsAddr(e,t,s){e[36+(t&15)]=s&15},getInstructionsData(e,t){return e[52+(t&15)]&15},setInstructionsData(e,t,s){e[52+(t&15)]=s&15},getStage(e){return e[68]&15},setStage(e,t){e[68]=t&15},getLastDecodedGates(e,t){const s=69+t*2;return e[s]<<8|e[s+1]},setLastDecodedGates(e,t,s){const r=69+t*2;e[r]=s>>8&255,e[r+1]=s&255},getLatchedRegA(e){return e[79]&15},setLatchedRegA(e,t){e[79]=t&15},getLatchedRegB(e){return e[80]&15},setLatchedRegB(e,t){e[80]=t&15},getLatchedRamOut(e){return e[81]&15},setLatchedRamOut(e,t){e[81]=t&15},getLatchedAluInA(e){return e[82]&15},setLatchedAluInA(e,t){e[82]=t&15},getLatchedAluInB(e){return e[83]&15},setLatchedAluInB(e,t){e[83]=t&15},execAluOp(e){const t=n.getStage(e),s=n.getLastDecodedGates(e,t),r=k(s),g=n.getLatchedAluInA(e),u=n.getLatchedAluInB(e);switch(r){case B.Add:return g+u;case B.Sub:return g-u;case B.And:return g&u;default:return 0}},getDataBus(e){const t=n.getStage(e),s=n.getLastDecodedGates(e,t),r=n.getPc(e);let g=n.getInstructionsData(e,r);return s&c.AR&&(g|=n.getLatchedRegA(e)),s&c.BR&&(g|=n.getLatchedRegB(e)),s&c.RR&&(g|=n.getLatchedRamOut(e)),(s&c.ALU1||s&c.ALU2)&&(g|=n.execAluOp(e)&15),g},getDebug(e){return{regA:n.getRegA(e),regB:n.getRegB(e),pc:n.getPc(e),flagZ:n.getFlagZ(e),flagO:n.getFlagO(e),latchedRegA:n.getLatchedRegA(e),latchedRegB:n.getLatchedRegB(e),latchedRamOut:n.getLatchedRamOut(e),latchedAluInA:n.getLatchedAluInA(e),latchedAluInB:n.getLatchedAluInB(e),stage:n.getStage(e),gates:{fetch:n.getLastDecodedGates(e,a.Fetch),decode:n.getLastDecodedGates(e,a.Decode),read:n.getLastDecodedGates(e,a.Read),execute:n.getLastDecodedGates(e,a.Execute),write:n.getLastDecodedGates(e,a.Write)},ram:h(0,16).map(t=>n.getRam(e,t)).toArray(),instructions:h(0,16).map(t=>n.getInstructionsOp(e,t)).toArray(),instructionsAddr:h(0,16).map(t=>n.getInstructionsAddr(e,t)).toArray(),instructionsData:h(0,16).map(t=>n.getInstructionsData(e,t)).toArray()}}};function*h(e,t){for(let s=e;s<t;s++)yield s}function k(e){return(e&c.ALU1?1:0)+(e&c.ALU2?2:0)}function x(e,t){const s=t.slice(),r=n.getStage(s),g=G[r],u=n.getPc(s);if(g===a.Decode){const i=n.getInstructionsOp(s,u),L=e.instructions[i].gates,d=e.timingMasks;for(const l of Object.values(a))n.setLastDecodedGates(s,l,L&d[l])}n.setStage(s,g);const f=n.getLastDecodedGates(s,r),m=n.getLastDecodedGates(s,g),o=(m^f)&m;if(o&c.AR&&n.setLatchedRegA(s,n.getRegA(s)),o&c.BR&&n.setLatchedRegB(s,n.getRegB(s)),o&c.RR){const i=n.getInstructionsAddr(s,u);n.setLatchedRamOut(s,n.getRam(s,i))}if(o&c.AW&&n.setRegA(s,n.getDataBus(s)),o&c.BW&&n.setRegB(s,n.getDataBus(s)),o&c.RW){const i=n.getInstructionsAddr(s,u);n.setRam(s,i,n.getDataBus(s))}if(o&c.ALU1||o&c.ALU2){const i=n.getRegA(s),L=n.getRegB(s);n.setLatchedAluInA(s,i),n.setLatchedAluInB(s,L);const d=n.execAluOp(s);n.setFlagZ(s,(d&15)===0),n.setFlagO(s,d>15||d<0)}if(g===a.Fetch){const i=!!(m&c.JN),L=!!(m&c.JO),d=!!(m&c.JZ),l=F(i,L,d,s)?n.getInstructionsAddr(s,u):u+1;n.setPc(s,l)}return s}function Z(e,t){do t=x(e,t);while(n.getStage(t)!==a.Fetch);return t}function F(e,t,s,r){if(!t&&!s)return e;const g=(s?n.getFlagZ(r):!0)&&(t?n.getFlagO(r):!0);return e?!g:g}function U(e){return{instructions:e.instructions.map(t=>({name:t.name,gates:t.gates.reduce(R,0)})),timingMasks:{[a.Fetch]:e.timingMasks.fetch.reduce(R,0),[a.Decode]:e.timingMasks.decode.reduce(R,0),[a.Read]:e.timingMasks.read.reduce(R,0),[a.Execute]:e.timingMasks.exec.reduce(R,0),[a.Write]:e.timingMasks.write.reduce(R,0)}}}function b(e){return{instructions:e.instructions.map(t=>({name:t.name,gates:A(t.gates)})),timingMasks:{fetch:A(e.timingMasks[a.Fetch]),decode:A(e.timingMasks[a.Decode]),read:A(e.timingMasks[a.Read]),exec:A(e.timingMasks[a.Execute]),write:A(e.timingMasks[a.Write])}}}function A(e){const t=[];for(const s of Object.values(c))e&s&&t.push(S[s]);return t}function R(e,t){if(!(t in c))throw new Error("Invalid gate");return c[t]|e}const M=U(W),y=D("decoder",{state:()=>({state:O(M)})});export{n as C,c as G,a,Z as b,x as c,k as g,J as m,U as r,y as u,b as w};
